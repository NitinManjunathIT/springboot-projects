package in.pwskills.nitin.controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.pwskills.nitin.entity.User;
import in.pwskills.nitin.payload.UserRequest;
import in.pwskills.nitin.payload.UserResponse;
import in.pwskills.nitin.service.IUserService;
import in.pwskills.nitin.util.JwtUtil;

@RestController
@RequestMapping("/user")
public class UserRestController {

	@Autowired
	private IUserService service;

	@Autowired
	private JwtUtil util;

	@Autowired
	private AuthenticationManager authenticationManager;

	// SAVE USER
	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user) {
		service.saveUser(user);
		// return new ResponseEntity<String>("User created", HttpStatus.OK);
		return ResponseEntity.ok("User created");
	}

	// TEST : User login test
	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest) {

		// validate the user by using authentication manager
		// (REST : STATELESS,it won't support FORM concept so)
		authenticationManager.authenticate(
				new UsernamePasswordAuthenticationToken(userRequest.getUsername(), userRequest.getPassword()));

		// Generate the token by using JwtUtil
		String token = util.generateToken(userRequest.getUsername());
		System.out.println("Token information :: " + token);

		return ResponseEntity.ok(new UserResponse(token, "GENERATED BY MR.NITIN"));
	}

	// TESTING THE ENDPOINT AFTER SUCCESFULLY LOGIN
	@PostMapping("/welcome")
	public ResponseEntity<String> showUserData(Principal p) {
		System.out.println(p.getClass().getName());
		return ResponseEntity.ok("Hello :" + p.getName());
	}

}
